USE ControlAcademicoBD;

-- Tabla de profesores
CREATE TABLE profesores (
  personalNum INT NOT NULL IDENTITY(1,1),
  personalNombre VARCHAR(255) NOT NULL,
  estado VARCHAR(255) NOT NULL,
  salario DECIMAL(10,2) NOT NULL,
  PRIMARY KEY (personalNum)
);

-- Tabla de alumnos
CREATE TABLE alumnos (
  alumnoNum INT NOT NULL IDENTITY(1,1),
  alumnoNombre VARCHAR(255) NOT NULL,
  genero CHAR(1) NOT NULL,
  alumnoDirecCuatrimestre VARCHAR(255) NOT NULL,
  alumnoTelfnCuatrimestre VARCHAR(255) NOT NULL,
  alumnoDirecFamiliar VARCHAR(255) NOT NULL,
  alumnoNumTelaamiliar VARCHAR(255) NOT NULL,
  PRIMARY KEY (alumnoNum)
);

-- Tabla de cursos
CREATE TABLE cursos (
  cursoNum INT NOT NULL IDENTITY(1,1),
  cursoNombre VARCHAR(255) NOT NULL,
  deptNombre VARCHAR(255) NOT NULL,
  cursoDirector INT NOT NULL,
  PRIMARY KEY (cursoNum),
  FOREIGN KEY (cursoDirector) REFERENCES profesores (personalNum)
);

-- Tabla de matriculas de cursos
CREATE TABLE cursoMatricula (
  cursoNum INT NOT NULL,
  alumnoNum INT NOT NULL,
  matriculaFecha DATE NOT NULL,
  cuotasPagadas DECIMAL(10,2) NOT NULL,
  PRIMARY KEY (cursoNum, alumnoNum),
  FOREIGN KEY (cursoNum) REFERENCES cursos (cursoNum),
  FOREIGN KEY (alumnoNum) REFERENCES alumnos (alumnoNum)
);

-- Tabla de módulos
CREATE TABLE modulos (
  moduloNum INT NOT NULL IDENTITY(1,1),
  moduloNombre VARCHAR(255) NOT NULL,
  nivel INT NOT NULL,
  cursoCodigo INT NOT NULL,
  PRIMARY KEY (moduloNum),
  FOREIGN KEY (cursoCodigo) REFERENCES cursos (cursoNum)
);

-- Tabla de matriculas de módulos
CREATE TABLE moduloMatricula (
  moduloNum INT NOT NULL,
  alumnoNum INT NOT NULL,
  matriculaFecha DATE NOT NULL,
  PRIMARY KEY (moduloNum, alumnoNum),
  FOREIGN KEY (moduloNum) REFERENCES modulos (moduloNum),
  FOREIGN KEY (alumnoNum) REFERENCES alumnos (alumnoNum)
);

-- Tabla de calificaciones de módulos
CREATE TABLE moduloCalificacion (
  moduloNum INT NOT NULL,
  alumnoNum INT NOT NULL,
  calificacionNum INT NOT NULL,
  grado CHAR(50) NOT NULL,
  PRIMARY KEY (moduloNum, alumnoNum, calificacionNum),
  FOREIGN KEY (moduloNum) REFERENCES modulos (moduloNum),
  FOREIGN KEY (alumnoNum) REFERENCES alumnos (alumnoNum)
);

-- Tabla de imparte
CREATE TABLE imparte (
  personalNum INT NOT NULL,
  moduloNum INT NOT NULL,
  PRIMARY KEY (personalNum, moduloNum),
  FOREIGN KEY (personalNum) REFERENCES profesores (personalNum),
  FOREIGN KEY (moduloNum) REFERENCES modulos (moduloNum)
);

-- Tabla de prerrequisitos
CREATE TABLE prerrequisitos (
  moduloNum1 INT NOT NULL,
  moduloNum2 INT NOT NULL,
  PRIMARY KEY (moduloNum1, moduloNum2),
  FOREIGN KEY (moduloNum1) REFERENCES modulos (moduloNum),
  FOREIGN KEY (moduloNum2) REFERENCES modulos (moduloNum)
);

--SCRIPTS
---------------------------------------------------------------------------------------------------------------------------------------------
-- Registro de Profesores
INSERT INTO profesores (personalNombre, estado, salario) VALUES
  ('Profesor 1', 'Activo', 3075.00),
  ('Profesor 2', 'Activo', 4250.00),
  ('Profesor 3', 'Inactivo', 5000.00),
  ('Profesor 4', 'Activo', 4325.00),
  ('Profesor 5', 'Activo', 5250.00),
  ('Profesor 6', 'Inactivo', 4125.10);
 
---------------------------------------------------------------------------------------------------------------------------------------------
-- Registro de alumnos
-- alumno 1
INSERT INTO alumnos (alumnoNombre, genero, alumnoDirecCuatrimestre, alumnoTelfnCuatrimestre, alumnoDirecFamiliar, alumnoNumTelaamiliar)
VALUES ('Juan Marcos Castillo', 'M', 'Calle 123, Mixco', '5555-5555', '14 Calle , Mixco Zona 6', '5555-1234');

-- alumno 2
INSERT INTO alumnos (alumnoNombre, genero, alumnoDirecCuatrimestre, alumnoTelfnCuatrimestre, alumnoDirecFamiliar, alumnoNumTelaamiliar)
VALUES ('Marta Felicia Molina', 'F', 'Calle 234, Ciudad de Guatemala', '5555-5558', '6 Calle, Ciudad de Guatemala', '5555-8888');

-- alumno 3
INSERT INTO alumnos (alumnoNombre, genero, alumnoDirecCuatrimestre, alumnoTelfnCuatrimestre, alumnoDirecFamiliar, alumnoNumTelaamiliar)
VALUES ('Carlos Fuentes Del Cid', 'M', 'Calle 345, Ciudad de Guatemala', '5555-5556', '7 Calle, Ciudad de Guatemala', '5555-6666');

-- alumno 4
INSERT INTO alumnos (alumnoNombre, genero, alumnoDirecCuatrimestre, alumnoTelfnCuatrimestre, alumnoDirecFamiliar, alumnoNumTelaamiliar)
VALUES ('Sandra Juventina López', 'F', 'Calle 456, Ciudad de Guatemala', '5555-5557', 'Calle 789, Ciudad de Guatemala', '5555-7777');

-- alumno 5
INSERT INTO alumnos (alumnoNombre, genero, alumnoDirecCuatrimestre, alumnoTelfnCuatrimestre, alumnoDirecFamiliar, alumnoNumTelaamiliar)
VALUES ('José Hernández Perez', 'M', 'Calle 567, Ciudad de Guatemala', '5555-5558', 'Calle 890, Ciudad de Guatemala', '5555-8888');

-- alumno 5
INSERT INTO alumnos (alumnoNombre, genero, alumnoDirecCuatrimestre, alumnoTelfnCuatrimestre, alumnoDirecFamiliar, alumnoNumTelaamiliar)
VALUES ('Feliciano Feliz Pop', 'M', 'Calle 789, Ciudad de Guatemala', '5555-5559', '2 Calle, Ciudad de Guatemala', '5555-9999');

  ---------------------------------------------------------------------------------------------------------------------------------------------
  -- Registro de Cursos
INSERT INTO cursos (cursoNombre, deptNombre, cursoDirector) VALUES
  ('Matemáticas', 'Ciencias', 1),
  ('Historia', 'Humanidades', 2),
  ('Sistemas Operativos', 'Ingeniería en Sistemas', 3),
  ('Biología', 'Ciencias', 4),
  ('Literatura', 'Humanidades', 5),
  ('Redes de Computadoras', 'Ingeniería en Sistemas', 6);

---------------------------------------------------------------------------------------------------------------------------------------------
-- Registro de CursoMatricula
INSERT INTO modulos (moduloNombre, nivel, cursoCodigo) VALUES
  ('Álgebra', 1, 1),
  ('Geometría', 1, 1),
  ('Calculo', 1, 2),
  ('Fisica', 1, 2),
  ('Requerimientos de Software', 1, 3),
  ('Diseño de Software', 2, 3),
  ('Estadistica', 2, 4),
  ('Analitica', 2, 4),
  ('Seminario', 3, 5),
  ('Administracion', 3, 5),
  ('Redes Avanzadas', 4, 6),
  ('Seguridad Informática', 4, 6);

---------------------------------------------------------------------------------------------------------------------------------------------
-- Registro de CursoMatricula
INSERT INTO cursoMatricula (cursoNum, alumnoNum, matriculaFecha, cuotasPagadas) VALUES
  (1, 1, '2022-01-15', 1500.00),
  (1, 2, '2022-02-20', 1800.00),
  (3, 1, '2023-03-10', 2000.00),
  (2, 3, '2022-07-15', 1600.00),
  (5, 5, '2022-08-01', 2100.00),
  (6, 6, '2023-01-10', 1900.00);

---------------------------------------------------------------------------------------------------------------------------------------------
-- Registro de moduloMatricula
INSERT INTO moduloMatricula (moduloNum, alumnoNum, matriculaFecha) VALUES
  (1, 1, '2022-01-15'),
  (2, 1, '2022-01-15'),
  (3, 2, '2022-02-20'),
  (4, 2, '2022-02-20'),
  (5, 1, '2023-03-10'),
  (6, 3, '2022-07-15'),
  (7, 4, '2022-08-01'),
  (8, 4, '2022-08-01'),
  (9, 5, '2023-01-10'),
  (10, 5, '2023-01-10'),
  (11, 6, '2022-12-15'),
  (12, 6, '2022-12-15');

---------------------------------------------------------------------------------------------------------------------------------------------
-- Registro de moduloCalificacion
INSERT INTO moduloCalificacion (moduloNum, alumnoNum, calificacionNum, grado) VALUES
(1, 1, 95, '3 Semestre'),
(2, 2, 80, '4 Semestre'),
(3, 3, 75, '5 Semestre'),
(4, 4, 59, '6 Semestre'),
(5, 5, 55, '5 Semestre'),
(6, 6, 83, '4 Semestre');

-- CONSULTAS
---------------------------------------------------------------------------------------------------------------------------------------------
-- 1. Se desea saber los cursos aprobados por el estudiante Juan Marcos Castillo
SELECT DISTINCT cursos.cursoNombre, alumnos.alumnoNombre, moduloCalificacion.calificacionNum AS calificacion
FROM cursos
INNER JOIN cursoMatricula ON cursos.cursoNum = cursoMatricula.cursoNum
INNER JOIN moduloCalificacion ON cursoMatricula.alumnoNum = moduloCalificacion.alumnoNum
INNER JOIN alumnos ON moduloCalificacion.alumnoNum = alumnos.alumnoNum
WHERE alumnos.alumnoNombre = 'Juan Marcos Castillo'
AND moduloCalificacion.calificacionNum >= 70
ORDER BY cursos.cursoNombre, moduloCalificacion.calificacionNum;


-- 2. Mostrar los profesores que ha impartido el curso de Matemáticas
SELECT p.personalNombre
FROM profesores p
JOIN cursos c ON p.personalNum = c.cursoDirector
WHERE c.cursoNombre = 'Matemáticas';

-- 3. Mostrar los cursos del Departamento de ingeniería en sistemas
SELECT cursoNombre
FROM cursos
WHERE deptNombre = 'Ingeniería en Sistemas';

-- 4.Mostrar los nombres de los Alumnos que se matricularon en un curso a partir de ‘2022-07-01’
SELECT DISTINCT a.alumnoNombre
FROM alumnos a
JOIN cursoMatricula cm ON a.alumnoNum = cm.alumnoNum
WHERE cm.matriculaFecha >= '2022-07-01';
